<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        configuration 配置
            properties 属性
            settings    设置
            typeAliases  别名
            typeHandlers 类型处理器
            objectFactory 对象工厂
            plugins 插件
            environments 配置环境
            databaseIdProvider 数据库厂商标识
            mappers 映射器
    -->
    <properties resource="db.properties"></properties>
    <settings>
        <!-- 这个配置使全局的映射器启用或禁用缓存 二级缓存有关-->
        <setting value="true" name="cacheEnabled"/>
        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载-->
        <setting value="true" name="lazyLoadingEnabled"/>
        <!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载 -->
        <setting value="true" name="aggressiveLazyLoading"/>
        <!-- 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动） -->
        <setting value="true" name="multipleResultSetsEnabled"/>
        <!-- 使用列标签代替列名。不同的驱动在这方便表现不同。参考驱动文档或充分测试两种方法来决定所使用的驱动 -->
        <setting value="true" name="useColumnLabel"/>
        <!-- 允许JDBC支持生成的键。需要适合的驱动。如果设置为true则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如Derby） -->
        <setting value="true" name="useGeneratedKeys"/>
        <!-- 指定MyBatis如何自动映射列到字段/属性。PARTIAL只会自动映射简单，没有嵌套的结果。FULL会自动映射任意复杂的结果（嵌套的或其他情况） -->
        <setting value="PARTIAL" name="autoMappingBehavior"/>
        <!--当检测出未知列（或未知属性）时，如何处理，默认情况下没有任何提示，这在测试的时候很不方便，不容易找到错误。 NONE : 不做任何处理 (默认值) WARNING : 警告日志形式的详细信息 FAILING : 映射失败，抛出异常和详细信息 -->
        <setting value="WARNING" name="autoMappingUnknownColumnBehavior"/>
        <!-- 配置默认的执行器。SIMPLE执行器没有什么特别之处。REUSE执行器重用预处理语句。BATCH执行器重用语句和批量更新 -->
        <setting value="SIMPLE" name="defaultExecutorType"/>
        <!-- 设置超时时间，它决定驱动等待一个数据库响应的时间 -->
        <setting value="25000" name="defaultStatementTimeout"/>
        <!--设置查询返回值数量，可以被查询数值覆盖 -->
        <setting value="100" name="defaultFetchSize"/>
        <!-- 允许在嵌套语句中使用分页 -->
        <setting value="false" name="safeRowBoundsEnabled"/>
        <!--是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。 -->
        <setting value="true" name="mapUnderscoreToCamelCase"/>
        <!--MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。 -->
        <setting value="SESSION" name="localCacheScope"/>
        <!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR OTHER。 -->
        <setting value="OTHER" name="jdbcTypeForNull"/>
        <!-- 指定哪个对象的方法触发一次延迟加载。 -->
        <setting value="equals,clone,hashCode,toString" name="lazyLoadTriggerMethods"/>
    </settings>

    <environments default="dev">
        <environment id="dev">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc_driver}"/>
                <property name="url" value="${jdbc_url}"/>
                <property name="username" value="${jdbc_username}"/>
                <property name="password" value="${jdbc_password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--指定SQL到对应的数据库厂商提供的数据库中运行-->
    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
    </databaseIdProvider>
    <mappers>
        <!--<package name="firstclass.mapper"/>--><!--包的形式导入:接口和映射文件须在同一个包下-->
        <!--<mapper class="firstclass.mapper.UserMapper" />--><!--类注册的形式:接口和映射文件须在同一个包下-->
        <mapper resource="firstclass/mapper/UserMapper.xml" /><!--classpath下资源的引用-->
    </mappers>
</configuration>